{
  "name": "dead-code-finder",
  "displayName": "Dead Code Finder",
  "description": "Find unused methods and functions in your code",
  "publisher": "sebastienfi",
  "repository": {
    "type": "git",
    "url": "https://github.com/sebastienfi/dead-code-finder.git"
  },
  "version": "0.0.3",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "activationEvents": [
    "onLanguage:python"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "deadCodeFinder.analyze",
        "title": "Find Dead Code: Analyze Workspace",
        "icon": "$(search)"
      },
      {
        "command": "deadCodeFinder.analyzeFile",
        "title": "Find Dead Code: Analyze Current File",
        "icon": "$(file-code)"
      },
      {
        "command": "deadCodeFinder.openDeadCode",
        "title": "Find Dead Code: Open Dead Code Location",
        "icon": "$(go-to-file)"
      },
      {
        "command": "deadCodeFinder.generateWhitelist",
        "title": "Find Dead Code: Generate Whitelist File",
        "icon": "$(shield)"
      },
      {
        "command": "deadCodeFinder.whitelistItem",
        "title": "Find Dead Code: Add Item to Whitelist",
        "icon": "$(check)"
      },
      {
        "command": "deadCodeFinder.openSettings",
        "title": "Find Dead Code: Open Settings",
        "icon": "$(gear)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "deadCodeExplorer",
          "name": "Dead Code"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "deadCodeFinder.analyze",
          "when": "view == deadCodeExplorer",
          "group": "navigation@1"
        },
        {
          "command": "deadCodeFinder.generateWhitelist",
          "when": "view == deadCodeExplorer",
          "group": "navigation@2"
        },
        {
          "command": "deadCodeFinder.openSettings",
          "when": "view == deadCodeExplorer",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "deadCodeFinder.openDeadCode",
          "when": "view == deadCodeExplorer && viewItem == deadCodeItem",
          "group": "navigation"
        },
        {
          "command": "deadCodeFinder.whitelistItem",
          "when": "view == deadCodeExplorer && viewItem == deadCodeItem",
          "group": "1_modification"
        }
      ],
      "editor/context": [
        {
          "command": "deadCodeFinder.analyzeFile",
          "when": "resourceLangId == python",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Dead Code Finder",
      "properties": {
        "deadCodeFinder.minConfidence": {
          "type": "number",
          "default": 60,
          "minimum": 0,
          "maximum": 100,
          "description": "Minimum confidence threshold (0-100) for reporting dead code"
        },
        "deadCodeFinder.enableAutoAnalysis": {
          "type": "boolean",
          "default": false,
          "description": "Enable automatic analysis on file save"
        },
        "deadCodeFinder.showDiagnostics": {
          "type": "boolean",
          "default": true,
          "description": "Show inline diagnostics for dead code in editor"
        },
        "deadCodeFinder.excludePatterns": {
          "type": "array",
          "default": [
            "**/venv/**",
            "**/node_modules/**",
            "**/.*/**"
          ],
          "description": "Array of glob patterns to exclude from analysis"
        },
        "deadCodeFinder.whitelistFile": {
          "type": "string",
          "default": "",
          "description": "Path to whitelist file for intentional dead code"
        },
        "deadCodeFinder.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "description": "Log level for the extension"
        },
        "deadCodeFinder.vulturePath": {
          "type": "string",
          "default": "",
          "description": "Custom path to the Vulture executable (e.g., ~/.local/bin/vulture)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "package:production": "vsce package -o .",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.17.30",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.23.0",
    "sinon": "^20.0.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.2",
    "vscode": "^1.1.37",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "child_process": "^1.0.2",
    "fs": "^0.0.1-security",
    "path": "^0.12.7"
  }
}
